/* CREATING A DATABASE */
CREATE DATABASE playstore;
SHOW DATABASES;
USE playstore;

/* CREATING TABLE FOR PLAYSTORE APPS */
CREATE TABLE playstore_apps (
App VARCHAR(255), 
Category VARCHAR(255), 
 Rating FLOAT, 
 Reviews INT, 
 Size VARCHAR(255), 
 Installs INT, 
 Type VARCHAR(10), 
 Price INT, 
 Content_Rating VARCHAR(30), 
 Genres VARCHAR(50), 
 Last_Updated DATE, 
 Current_Ver VARCHAR(50), 
 Android_Ver VARCHAR(50)
 );
 
 /* LOAD DATA FROM CSV FILE INTO PLAYSTORE TABLE */
 -- DETERMINING THE SECURE_FILE PATH 
SHOW VARIABLES LIKE "secure_file_priv";

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/projectdata.csv' 
INTO TABLE playstore_apps 
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(App,Category,Rating,Reviews,Size,Installs,Type,Price,Content_Rating,Genres,@Last_Updated,Current_Ver,Android_Ver)
SET Last_Updated = STR_TO_DATE(@Last_Updated, '%d-%m-%Y');

/* CREATING PLAYSTORE REVIEWS TABLE */
CREATE TABLE playstore_reviews (
App VARCHAR(255), 
Translated_Review TEXT, 
 Sentiment TEXT, 
 Sentiment_Polarity FLOAT, Sentiment_Subjectivity FLOAT 
 );
 
 -- ALLOWING MYSQL TO LOAD REVIEWS DATA BY DISABLING SQL MODE
SELECT @@sql_mode;
set sql_mode = '';

 /* LOADING DATA INTO PLAYSTORE REVIEWS TABLE */
 LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/playstore_reviews.csv' 
INTO TABLE playstore_reviews 
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

-- CHECKING BOTH TABLES
SHOW tables;
 SELECT * FROM playstore_apps;
 SELECT * FROM playstore_reviews;

-- SOLUTION TO QUESTIONS
-- 1. APPS WITH HIGHEST RATING
SELECT App, Rating FROM playstore_apps WHERE Rating = (SELECT MAX(Rating) FROM playstore_apps);

-- 2. NUMBER OF INSTALLS AND REVIEWS ORDER BY REVIEWS OF THE ABOVE APPS
SELECT App, Installs, Reviews FROM playstore_apps WHERE Rating = (SELECT MAX(Rating) FROM playstore_apps) 
ORDER BY Reviews DESC;

-- 3. APP WITH THE HIGHEST NUMBER OF REVIEWS
SELECT App, Category, Reviews FROM playstore_apps WHERE Reviews = (SELECT MAX(Reviews) FROM playstore_apps);

-- 4. TOTAL REVENUE GENERATED BY GOOGLE PLAYSTORE
SELECT SUM(Price * Installs) AS Total_Revenue FROM playstore_apps;

-- 5. CATEGORY WITH THE HIGHEST NUMBER OF INSTALLS
SELECT Category, SUM(Installs) AS Total_Installs from playstore_apps 
GROUP BY Category ORDER BY Total_Installs DESC LIMIT 1;

-- 6. GENRE WITH THE MOST NUMBER OF PUBLISHED APPS
SELECT Genres, COUNT(App) AS Total_Apps from playstore_apps 
GROUP BY Genres ORDER BY Total_Apps DESC LIMIT 1;

-- 7. LIST OF ALL GAMES ORDER BY NUMBER OF INSTALLS IN DESCENDING ORDER
SELECT DISTINCT App, Installs FROM playstore_apps 
WHERE Category = 'GAME' ORDER BY Installs DESC;

-- 8. LIST OF APPS THAT CAN WORK ON ANDROID VERSION 4.0.3 AND UP
SELECT App, Android_Ver from playstore_apps WHERE Android_Ver LIKE '%4.0.3 and up%';

-- 9. TOTAL NUMBER OF FREE AND PAID APPS
SELECT Type, COUNT(App) AS Total_Apps FROM playstore_apps GROUP BY type;

-- 10. BEST DATING APP
SELECT App, Reviews FROM playstore_apps WHERE Category = 'DATING' ORDER BY Reviews DESC LIMIT 1;

-- 11. NUMBER OF REVIEWS WITH POSITIVE SENTIMENT FOR 10 BEST FOODS FOR YOU
SELECT Sentiment, COUNT(Translated_Review) AS Total_Reviews FROM playstore_reviews 
WHERE Sentiment IN ('Positive', 'Negative') AND App LIKE '%10 Best Foods for You%' GROUP BY Sentiment;

-- 12. COMMENTS OF ASUS SUPERNOTE WITH BOTH SENTIENT POLARITY AND SUBJECTIVITY OF 1
SELECT App, Translated_Review, Sentiment_Polarity, Sentiment_Subjectivity FROM playstore_reviews 
WHERE App LIKE '%ASUS SuperNote%' AND Sentiment_Polarity = 1 AND Sentiment_Subjectivity = 1;

-- 13. NEUTRAL SENTIMENT REVIEWS FOR ABS TRAINING-BURN BELLY FAT
SELECT App, Sentiment FROM playstore_reviews WHERE App LIKE '%Abs Training-Burn belly fat%' AND Sentiment LIKE '%NEUTRAL%';

-- 14 NEGATIVE SENTIMENT REVIEWS FOR ADOBE ACROBAT READER
SELECT App, Sentiment, Sentiment_Polarity, Sentiment_Subjectivity FROM playstore_reviews WHERE App LIKE '%Adobe Acrobat Reader%' AND Sentiment LIKE '%Negative%';